<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wangsir&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wangwanchao.wang/"/>
  <updated>2019-07-03T01:33:02.493Z</updated>
  <id>http://wangwanchao.wang/</id>
  
  <author>
    <name>wanchao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>consul-base</title>
    <link href="http://wangwanchao.wang/2019/07/03/consul-base/"/>
    <id>http://wangwanchao.wang/2019/07/03/consul-base/</id>
    <published>2019-07-03T01:33:02.000Z</published>
    <updated>2019-07-03T01:33:02.493Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>vue-lifecycle</title>
    <link href="http://wangwanchao.wang/2019/06/28/vue-lifecycle/"/>
    <id>http://wangwanchao.wang/2019/06/28/vue-lifecycle/</id>
    <published>2019-06-28T02:18:58.000Z</published>
    <updated>2019-06-28T02:18:58.823Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Vue--数据传递</title>
    <link href="http://wangwanchao.wang/2019/06/28/vue-data/"/>
    <id>http://wangwanchao.wang/2019/06/28/vue-data/</id>
    <published>2019-06-28T02:03:57.000Z</published>
    <updated>2019-06-28T02:07:25.102Z</updated>
    
    <content type="html"><![CDATA[<p>组件之间的数据传递</p><a id="more"></a><h2 id="父传子"><a href="#父传子" class="headerlink" title="父传子"></a>父传子</h2><h2 id="子传父"><a href="#子传父" class="headerlink" title="子传父"></a>子传父</h2><h2 id="Event-Bus"><a href="#Event-Bus" class="headerlink" title="Event Bus"></a>Event Bus</h2><p>可以平级传数</p><h2 id="Vuex传递"><a href="#Vuex传递" class="headerlink" title="Vuex传递"></a>Vuex传递</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;组件之间的数据传递&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>js-icon</title>
    <link href="http://wangwanchao.wang/2019/06/24/js-icon/"/>
    <id>http://wangwanchao.wang/2019/06/24/js-icon/</id>
    <published>2019-06-24T01:20:26.000Z</published>
    <updated>2019-06-24T01:20:26.255Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SpringSecurity--SAAS平台设计思路(七)</title>
    <link href="http://wangwanchao.wang/2019/06/21/spring-security-saas/"/>
    <id>http://wangwanchao.wang/2019/06/21/spring-security-saas/</id>
    <published>2019-06-21T03:49:55.000Z</published>
    <updated>2019-06-24T02:05:57.205Z</updated>
    
    <content type="html"><![CDATA[<p>最近要做一个saas平台，20171年的时候选用的是Shiro实现，考虑到SpringSecurity可以完美的整合Oauth2.0/OpenID</p><a id="more"></a><p>RBAC模型</p><h3 id="安全原则"><a href="#安全原则" class="headerlink" title="安全原则"></a>安全原则</h3><ol><li>最小权限原则</li><li>责任分离原则</li><li>数据抽象原则</li></ol><p>页面权限<br>功能权限<br>数据权限</p><h2 id="数据模型"><a href="#数据模型" class="headerlink" title="数据模型"></a>数据模型</h2><p>用户</p><p>角色：可以按照部门、岗位、</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近要做一个saas平台，20171年的时候选用的是Shiro实现，考虑到SpringSecurity可以完美的整合Oauth2.0/OpenID&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SpringSecurity--原理与流程(二)</title>
    <link href="http://wangwanchao.wang/2019/06/21/spring-security-flow/"/>
    <id>http://wangwanchao.wang/2019/06/21/spring-security-flow/</id>
    <published>2019-06-21T03:12:47.000Z</published>
    <updated>2019-06-21T03:18:23.636Z</updated>
    
    <content type="html"><![CDATA[<p>从启动，到权限认证过程</p><a id="more"></a><p>流程图：</p><image src></image>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;从启动，到权限认证过程&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SpringSecurity--过滤器(三)</title>
    <link href="http://wangwanchao.wang/2019/06/21/spring-security-filter/"/>
    <id>http://wangwanchao.wang/2019/06/21/spring-security-filter/</id>
    <published>2019-06-21T03:12:01.000Z</published>
    <updated>2019-06-21T03:16:46.049Z</updated>
    
    <content type="html"><![CDATA[<p>实现权限的框架，无非都是一些filter过滤</p><a id="more"></a><p>SpringSecurity有十多种filter，</p><p>filter流程时序图：</p><image src></image>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;实现权限的框架，无非都是一些filter过滤&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SpringSecurity--整合jwt(六)</title>
    <link href="http://wangwanchao.wang/2019/06/21/spring-security-jwt/"/>
    <id>http://wangwanchao.wang/2019/06/21/spring-security-jwt/</id>
    <published>2019-06-21T03:11:21.000Z</published>
    <updated>2019-06-21T03:24:25.810Z</updated>
    
    <content type="html"><![CDATA[<p>jwt模式</p><a id="more"></a><h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;jwt模式&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SpringSecurity--整合oauth2(五)</title>
    <link href="http://wangwanchao.wang/2019/06/21/spring-security-oauth2/"/>
    <id>http://wangwanchao.wang/2019/06/21/spring-security-oauth2/</id>
    <published>2019-06-21T03:11:03.000Z</published>
    <updated>2019-06-21T03:20:28.898Z</updated>
    
    <content type="html"><![CDATA[<p>oauth2.0有4种认证模型</p><a id="more"></a><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>在客户端和服务端中间，设置了一个授权层，客户端不能登陆服务端，只能登录中间授权层。</p><p>第一阶段使用account + secret登录中间层，获得token</p><p>第二阶段开始使用token进行权限验证</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;oauth2.0有4种认证模型&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SpringSecurity--概览(一)</title>
    <link href="http://wangwanchao.wang/2019/06/21/spring-security-base/"/>
    <id>http://wangwanchao.wang/2019/06/21/spring-security-base/</id>
    <published>2019-06-21T03:07:55.000Z</published>
    <updated>2019-06-24T02:05:51.456Z</updated>
    
    <content type="html"><![CDATA[<p>权限模型</p><a id="more"></a><h2 id="权限控制模型"><a href="#权限控制模型" class="headerlink" title="权限控制模型"></a>权限控制模型</h2><h3 id="自主访问控制-DAC"><a href="#自主访问控制-DAC" class="headerlink" title="自主访问控制 DAC"></a>自主访问控制 DAC</h3><h3 id="强制访问控制-MAC"><a href="#强制访问控制-MAC" class="headerlink" title="强制访问控制 MAC"></a>强制访问控制 MAC</h3><p>通过硬件实现</p><p>场景：安全要求较高的军事系统</p><h3 id="基于角色的访问控制-RBAC"><a href="#基于角色的访问控制-RBAC" class="headerlink" title="基于角色的访问控制 RBAC"></a>基于角色的访问控制 RBAC</h3><h4 id="RBAC0-基本模型"><a href="#RBAC0-基本模型" class="headerlink" title="RBAC0 基本模型"></a>RBAC0 基本模型</h4><p>U 用户<br>R 角色<br>P 权限</p><h4 id="RBAC1-角色分级模型"><a href="#RBAC1-角色分级模型" class="headerlink" title="RBAC1 角色分级模型"></a>RBAC1 角色分级模型</h4><ol><li>一般继承关系：允许角色之间多继承关系</li><li>受限继承关系：角色继承是一个树形的单继承关系</li></ol><p>优点：<br>缺点：<br>适用场景：</p><h4 id="RBAC2-角色限制模型"><a href="#RBAC2-角色限制模型" class="headerlink" title="RBAC2 角色限制模型"></a>RBAC2 角色限制模型</h4><ol><li>静态分离：互斥的角色不能赋给同一个用户</li><li>动态分离：用户不能使用两个互斥的角色登录</li></ol><h4 id="RBAC3-统一模型"><a href="#RBAC3-统一模型" class="headerlink" title="RBAC3 统一模型"></a>RBAC3 统一模型</h4><p>用户管理角色<br>角色关联权限</p><h3 id="基于属性的访问控制-ABAC"><a href="#基于属性的访问控制-ABAC" class="headerlink" title="基于属性的访问控制 ABAC"></a>基于属性的访问控制 ABAC</h3><h4 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h4><ol><li>用户属性 用户年龄</li><li>环境属性 当前时间</li><li>操作属性 读/写</li><li>资源属性 文章/图片</li></ol><h2 id="权限对象模型"><a href="#权限对象模型" class="headerlink" title="权限对象模型"></a>权限对象模型</h2><h3 id="按-分类："><a href="#按-分类：" class="headerlink" title="按  分类："></a>按  分类：</h3><p>页面权限 用户可以看到那些页面；<br>操作权限 用户可以在页面内进行那些操作，增删改查等；<br>数据权限 用户可以看到那些数据或内容；</p><h3 id="按-分类：-1"><a href="#按-分类：-1" class="headerlink" title="按  分类："></a>按  分类：</h3><p>功能权限<br>数据权限</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;权限模型&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Linux--零拷贝</title>
    <link href="http://wangwanchao.wang/2019/06/17/linux-zerocopy/"/>
    <id>http://wangwanchao.wang/2019/06/17/linux-zerocopy/</id>
    <published>2019-06-17T02:13:56.000Z</published>
    <updated>2019-06-17T02:23:02.181Z</updated>
    
    <content type="html"><![CDATA[<p>linux中的零拷贝技术</p><a id="more"></a><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>普通I/O：应用程序或者运行在用户模式下的库函数访问硬件设备时，I/O操作需要</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;linux中的零拷贝技术&lt;/p&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://wangwanchao.wang/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat--类加载模型(五)</title>
    <link href="http://wangwanchao.wang/2019/06/16/tomcat-classloader/"/>
    <id>http://wangwanchao.wang/2019/06/16/tomcat-classloader/</id>
    <published>2019-06-16T04:15:30.000Z</published>
    <updated>2019-06-16T04:47:48.620Z</updated>
    
    <content type="html"><![CDATA[<p>tomcat类加载器破坏了jvm的双亲委派机制</p><a id="more"></a><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.apache.catalina.startup;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Daemon reference.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">Object</span> catalinaDaemon = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">ClassLoader commonLoader = <span class="keyword">null</span>;</span><br><span class="line">ClassLoader catalinaLoader = <span class="keyword">null</span>;</span><br><span class="line">ClassLoader sharedLoader = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> initClassLoaders() &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        commonLoader = createClassLoader(<span class="string">"common"</span>, <span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">if</span> (commonLoader == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// no config file, default to this loader - we might be in a 'single' env.</span></span><br><span class="line">            commonLoader = <span class="keyword">this</span>.getClass().getClassLoader();</span><br><span class="line">        &#125;</span><br><span class="line">        catalinaLoader = createClassLoader(<span class="string">"server"</span>, commonLoader);</span><br><span class="line">        sharedLoader = createClassLoader(<span class="string">"shared"</span>, commonLoader);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Throwable t) &#123;</span><br><span class="line">        handleThrowable(t);</span><br><span class="line">        <span class="built_in">log</span>.error(<span class="string">"Class loader creation threw exception"</span>, t);</span><br><span class="line">        System.<span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>类加载器</th><th style="text-align:center">tomcat可见性</th><th style="text-align:center">webapp可见性</th></tr></thead><tbody><tr><td>commonLoader</td><td style="text-align:center">可见</td><td style="text-align:center">可见</td></tr><tr><td>catalinaLoader</td><td style="text-align:center">可见</td><td style="text-align:center">不可见</td></tr><tr><td>sharedLoader</td><td style="text-align:center">不可见</td><td style="text-align:center">可见</td></tr><tr><td>WebappClassLoader</td><td style="text-align:center">不可见</td><td style="text-align:center">只对当前web可见</td></tr></tbody></table><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><ol><li>jar类库隔离：tomcat可以部署多个应用，如果引用多个不同版本的jar，类实现不同，所以需要加载不同的jar包</li><li>jar类库共享：如果jar版本相同，则只加载一份</li><li>安全隔离：tomcat自身的类加载器和web应用的类加载器隔离</li><li>热加载：jsp修改后不需要重启也可以刷新，这样就需要动态加载jsp文件</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;tomcat类加载器破坏了jvm的双亲委派机制&lt;/p&gt;
    
    </summary>
    
    
      <category term="tomcat" scheme="http://wangwanchao.wang/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>java-jmx</title>
    <link href="http://wangwanchao.wang/2019/06/16/java-jmx/"/>
    <id>http://wangwanchao.wang/2019/06/16/java-jmx/</id>
    <published>2019-06-16T04:04:45.000Z</published>
    <updated>2019-06-16T04:04:45.112Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>前端中的布局方式</title>
    <link href="http://wangwanchao.wang/2019/06/16/js-layout/"/>
    <id>http://wangwanchao.wang/2019/06/16/js-layout/</id>
    <published>2019-06-15T16:32:06.000Z</published>
    <updated>2019-06-24T02:05:43.215Z</updated>
    
    <content type="html"><![CDATA[<p>不同的布局方式</p><a id="more"></a><h2 id="Flex布局"><a href="#Flex布局" class="headerlink" title="Flex布局"></a>Flex布局</h2><h3 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h3><ol><li>伸缩容器</li><li>主轴、侧轴配置简单</li><li>子元素沿着容器对齐</li></ol><h3 id="微信小程序中的应用"><a href="#微信小程序中的应用" class="headerlink" title="微信小程序中的应用"></a>微信小程序中的应用</h3><h4 id="display"><a href="#display" class="headerlink" title="display"></a>display</h4><p>flex 行内元素<br>block 块元素</p><h4 id="flex-direction"><a href="#flex-direction" class="headerlink" title="flex-direction"></a>flex-direction</h4><p>row<br>row-reverse<br>column<br>column-reverse</p><h4 id="轴对齐方式"><a href="#轴对齐方式" class="headerlink" title="轴对齐方式"></a>轴对齐方式</h4><p>justify-content<br>align-items</p><h2 id="Grid布局"><a href="#Grid布局" class="headerlink" title="Grid布局"></a>Grid布局</h2><h2 id="实际场景"><a href="#实际场景" class="headerlink" title="实际场景"></a>实际场景</h2><h3 id="两列自适应布局"><a href="#两列自适应布局" class="headerlink" title="两列自适应布局"></a>两列自适应布局</h3><h4 id="margin-float"><a href="#margin-float" class="headerlink" title="margin + float"></a>margin + float</h4><p>左列定宽，右列自适应</p><h4 id="absolute"><a href="#absolute" class="headerlink" title="absolute"></a>absolute</h4><h4 id="float-BFC"><a href="#float-BFC" class="headerlink" title="float + BFC"></a>float + BFC</h4><h4 id="table布局"><a href="#table布局" class="headerlink" title="table布局"></a>table布局</h4><h4 id="flex布局"><a href="#flex布局" class="headerlink" title="flex布局"></a>flex布局</h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;不同的布局方式&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Tomcat启动流程(二)</title>
    <link href="http://wangwanchao.wang/2019/06/15/tomcat-startup/"/>
    <id>http://wangwanchao.wang/2019/06/15/tomcat-startup/</id>
    <published>2019-06-15T14:54:00.000Z</published>
    <updated>2019-06-15T15:36:05.252Z</updated>
    
    <content type="html"><![CDATA[<p>tomcat启动流程</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;tomcat启动流程&lt;/p&gt;
    
    </summary>
    
    
      <category term="tomcat" scheme="http://wangwanchao.wang/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>解析JavaScript ECMAScript TypeScript COffeScript</title>
    <link href="http://wangwanchao.wang/2019/06/14/es6-ts/"/>
    <id>http://wangwanchao.wang/2019/06/14/es6-ts/</id>
    <published>2019-06-14T07:46:52.000Z</published>
    <updated>2019-07-15T16:14:01.464Z</updated>
    
    <content type="html"><![CDATA[<p>JS框架层出不穷，</p><a id="more"></a><h2 id="ECMAScript"><a href="#ECMAScript" class="headerlink" title="ECMAScript"></a>ECMAScript</h2><blockquote><p>ECMAScript6的目标是使得JavaScript语言可以用来编写大型的复杂的应用程序，于是增添了许多特性，例如：模块和类，Maps、Sets、Promises、生成器（Generators）等。<br>尽管ECMAScript6做了大量的更新，但标准化委员会仍然决定要兼容以前的版本，但随之而来的问题是，目前主流的宿主环境（无论是浏览器环境还是服务器环境）不能完全支持ES6，导致了开发者真正要使用ECMAScript6时，需要将ECMAScript6代码进行转译。</p></blockquote><h2 id="TypeScript"><a href="#TypeScript" class="headerlink" title="TypeScript"></a>TypeScript</h2><blockquote><p>TypeScript 是一种微软开源的编程语言。<br>由于JavaScript是弱类型的，TypeScript为JavaScript扩展类和模块的概念。正是由于TypeScript最大的特点是类型化，因此才叫做TypeScript。<br>TypeScript支持ECMAScript6标准（实际上相当于是对ECMAScript6的提前实现），并且能将代码根据需求转换为 ES3/5/6。这意味着开发者可以通过TypeScript使用最新的ECMAScript特性，无需再考虑兼容性的问题。</p></blockquote><h3 id="TypeScript分类"><a href="#TypeScript分类" class="headerlink" title="TypeScript分类"></a>TypeScript分类</h3><ol><li>一个是类似 Babel 的阵营，坚持JavaScript 的语法风格编写，为开发者提供最新的 ECMAScript 特性；</li><li>另一个则是Coffeescript、Clojure、Dart等的阵营，它们的语法与 JavaScript 迥然不同，但最终会编译为JavaScript；</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;JS框架层出不穷，&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Tomcat--设计模式(四)</title>
    <link href="http://wangwanchao.wang/2019/06/13/tomcat-pattern/"/>
    <id>http://wangwanchao.wang/2019/06/13/tomcat-pattern/</id>
    <published>2019-06-13T06:31:47.000Z</published>
    <updated>2019-06-15T14:52:54.832Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="tomcat" scheme="http://wangwanchao.wang/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat请求过程--NIO(三)</title>
    <link href="http://wangwanchao.wang/2019/06/13/tomcat-nio/"/>
    <id>http://wangwanchao.wang/2019/06/13/tomcat-nio/</id>
    <published>2019-06-13T06:31:17.000Z</published>
    <updated>2019-06-15T14:53:09.137Z</updated>
    
    <content type="html"><![CDATA[<p>tomcat处理请求的NIO是基于jdk的NIO操作</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;tomcat处理请求的NIO是基于jdk的NIO操作&lt;/p&gt;
    
    </summary>
    
    
      <category term="tomcat" scheme="http://wangwanchao.wang/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>dubbo-base</title>
    <link href="http://wangwanchao.wang/2019/06/13/dubbo-base/"/>
    <id>http://wangwanchao.wang/2019/06/13/dubbo-base/</id>
    <published>2019-06-13T05:27:17.000Z</published>
    <updated>2019-06-13T05:27:17.805Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>微服务--路由器(五)</title>
    <link href="http://wangwanchao.wang/2019/06/12/spring-cloud-ribbon/"/>
    <id>http://wangwanchao.wang/2019/06/12/spring-cloud-ribbon/</id>
    <published>2019-06-11T16:53:57.000Z</published>
    <updated>2019-06-11T16:55:05.496Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Ribbon"><a href="#Ribbon" class="headerlink" title="Ribbon"></a>Ribbon</h2><h2 id="Feign"><a href="#Feign" class="headerlink" title="Feign"></a>Feign</h2><h2 id="OpenFeign"><a href="#OpenFeign" class="headerlink" title="OpenFeign"></a>OpenFeign</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Ribbon&quot;&gt;&lt;a href=&quot;#Ribbon&quot; class=&quot;headerlink&quot; title=&quot;Ribbon&quot;&gt;&lt;/a&gt;Ribbon&lt;/h2&gt;&lt;h2 id=&quot;Feign&quot;&gt;&lt;a href=&quot;#Feign&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
    
  </entry>
  
</feed>
