<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wangsir&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wangwanchao.wang/"/>
  <updated>2019-05-31T13:24:40.420Z</updated>
  <id>http://wangwanchao.wang/</id>
  
  <author>
    <name>wanchao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>talk-in-wangxiaobo</title>
    <link href="http://wangwanchao.wang/2019/05/31/talk-in-wangxiaobo/"/>
    <id>http://wangwanchao.wang/2019/05/31/talk-in-wangxiaobo/</id>
    <published>2019-05-31T13:24:40.000Z</published>
    <updated>2019-05-31T13:24:40.420Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>csapp-lab</title>
    <link href="http://wangwanchao.wang/2019/05/31/csapp-lab/"/>
    <id>http://wangwanchao.wang/2019/05/31/csapp-lab/</id>
    <published>2019-05-31T09:06:20.000Z</published>
    <updated>2019-05-31T09:06:20.615Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>csapp-instructions</title>
    <link href="http://wangwanchao.wang/2019/05/31/csapp-instructions/"/>
    <id>http://wangwanchao.wang/2019/05/31/csapp-instructions/</id>
    <published>2019-05-31T06:46:13.000Z</published>
    <updated>2019-05-31T06:46:13.864Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>关于失去</title>
    <link href="http://wangwanchao.wang/2019/05/30/thinking-in-lost/"/>
    <id>http://wangwanchao.wang/2019/05/30/thinking-in-lost/</id>
    <published>2019-05-30T15:04:29.000Z</published>
    <updated>2019-05-30T15:54:44.056Z</updated>
    
    <content type="html"><![CDATA[<p>关于失去，说是老了也好，说是闲的也好，总之，这一刻，因为一些人，一些事儿。总想说点什么。</p><a id="more"></a><p>自从开始写代码这个行业，大多的时间忙于各种新技术的更新换代，怕自己被淘汰，就陷于无尽的焦虑当中。很少有时间享受读一本书，出去骑行的慢时光。即便这样，仍然面临被很多人拍死在沙滩上的处境。<br>最近得闲，因为某种原因，李志的专辑被全平台下线，网上遍寻，有幸发现一个网站《麦田音乐网》，这是一个运营了十多年的网站，而且是个人运营，很是惊讶，竟然还有这种佛系的地方。<br>大致浏览了一下，猜测站长应该是个很厉害、又有点文艺的人，我看大家称呼他鬼哥。网站中除了歌单，最精彩的地方是，还有个麦游记，然后就有很多人会写下自己的故事，感觉类似于那个很有创意的淘宝卖家《CY故事 • 一家卖故事的淘宝店》(有点忘了，可以去查了一下)，这些故事总能触动内心深处的某些东西。</p><p>网站有个很醒目的flag：”我没法像个农民那样善良，只是麦子还在对着太阳愤怒生长”，第一印象就是《麦田里的守望者》，然后一层一层的“扒光”，在留言本的地方，站长的：</p><blockquote><p>欢迎来到“麦田音乐网”，如果您有什么想说的话，请在这里留言！<br>麦田音乐网建于2006年，是一个简单纯粹的音乐、文字分享网站。<br>在浮躁、喧嚣的互联网中，希望你能在这里静下来。<br>网站取名于《麦田里的守望者》、《小王子》、海子的诗、梵高与麦田。<br>站长QQ:40589302 微信:linfox<br>微信公众号“麦音乐”：maiyinyue<br>不换友情链接。</p></blockquote><p>留言本下有些留言真的是别有意味，这种感觉恐怕就是旧友久别重逢而不曾遗忘的感觉吧。</p><blockquote><p>猪诺 2019-01-29    11:42 上午<br>初中时开始听，现在我研三即将毕业。一晃这么多年。<br>QQ上还加着你，但是QQ已经不用了。<br>走了好久，发现麦田还在，真好。</p></blockquote><p>在留言本后还有个淘宝店铺，也是十多年的老店，打开店铺，果然做生意也是很佛系的，我比较喜欢的是里面的文化衫，”grunge is dead”，”we are young”。真是一个很有趣的人。</p><p>总之，这是一个很有内容的网站，作为一个技术人，接触了太多的网站，这算是网站中的一股清流了。<br>意犹未尽之余，去查了一下”伍尔芙”，著名的一句话–你不能通过逃避生活以寻找安宁，有机会读一下《海浪》；<br>“科特柯本”，摇滚乐、朋克，这些东西没有系统的了解过，瞬间感觉自己的孤陋寡闻，不禁反思“我究竟是个有趣的人吗？”，因为最近也在读王小波，颇多感慨，也许自己还是太晚熟了，失去了太多宝贵的时间；<br>“麦田里的守望者”，这本书其实很早有了解，但是一直没读过，去豆瓣了解了一下，中间刘瑜老师在2009年的一条评论还是令人深思的，的确，生活有美好，也有颓废，但是不能只看到颓废。然后打开刘瑜老师的个人博客，域名早已变成一个机械公司的网站…</p><p>生活，究竟是什么？可能我们每个人都问过自己，也在不断的寻找答案，尤其是这个快速迭代的时代，很多的东西终会被新的事物掩盖，但是她的美好，或者对她的依恋，却仍然在散发着光辉。</p><p>就好像这个网站，有一天会不会突然不能用了？我不知道，但我会尽力维护下去，当成一种信仰。我想要看清这个世界！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于失去，说是老了也好，说是闲的也好，总之，这一刻，因为一些人，一些事儿。总想说点什么。&lt;/p&gt;
    
    </summary>
    
    
      <category term="life" scheme="http://wangwanchao.wang/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>深入理解计算机系统--并发和并行</title>
    <link href="http://wangwanchao.wang/2019/05/29/csapp-concurrent/"/>
    <id>http://wangwanchao.wang/2019/05/29/csapp-concurrent/</id>
    <published>2019-05-29T12:56:35.000Z</published>
    <updated>2019-05-29T15:30:34.482Z</updated>
    
    <content type="html"><![CDATA[<p>看了一遍，感觉并没有解释的很深刻，也许是自己理解的问题。</p><a id="more"></a><h2 id="并发"><a href="#并发" class="headerlink" title="并发"></a>并发</h2><p>现代操作系统构建并发程序的方式：</p><ol><li>进程<br> 接收到请求后，fork一个子进程，由子进程来处理任务。因为每个进程的虚拟内存空间是独立的，所以进程间通信需要显式进行。常见的有：<br> 优点：共享文件表，不共享用户地址空间<br> 缺点：通信困难</li></ol><ol start="2"><li><p>I/O多路复用模型<br> 由select来监听接收请求，没有数据时CPU挂起，只有发生I/O事件时，才会处理。状态机模型，流之间的通信通过状态实现。例如：jdk的NIO模型、Netty的I/O模型</p><p> 改进：基于多路复用的事件驱动模型</p><p> 状态机模型：</p><pre><code>状态：等待描述符 $d_i$ 准备好可读，是否可读就是一种true/false的状态输入事件：描述符 $d_i$ 准备好可读，其实就是一个触发事件转移：从描述符 $d_i$ 读取数据，即状态转移，</code></pre><p> 优点：处于同一进程内，所有的流可以共享该进程的全部地址空间<br> 缺点：编码复杂度上升</p></li><li><p>线程<br> 多个线程在单一进程中，由内核统一调度，像进程一样，但是共享进程的虚拟内存空间。<br> 每个线程有自己的执行上下文，线程代码和局部数据被封装在一个线程例程中。每个独立的线程中的线程栈通常不能被其它线程访问，除非线程得到指向其他线程的访问指针。除此之外，线程中的全局变量、静态变量只存在进程的虚拟内存中，可以被其它线程访问</p><p> Posix线程：在C程序中处理线程的一个标准接口</p><p> 可结合线程：线程能够被其它线程收回和杀死，内存也可以被其它线程回收。<br> 可分离线程：线程不能够被其它线程收回和杀死，内存由系统管理</p></li></ol><h2 id="信号量"><a href="#信号量" class="headerlink" title="信号量"></a>信号量</h2><p>共享变量存在线程安全的问题，可以使用一种进度图模型分析指令执行顺序问题。然后引入了信号量机制</p><h3 id="进度图"><a href="#进度图" class="headerlink" title="进度图"></a>进度图</h3><p>进度图：n个并发线程的执行模型。进度图模型存在局限性，多处理器并发执行，不能使用进度图解释<br>临界区：</p><p>互斥</p><p>不安全区</p><p>安全轨迹<br>不安全轨迹</p><h3 id="信号量-1"><a href="#信号量-1" class="headerlink" title="信号量"></a>信号量</h3><p>主要包含2个操作P(s)、V(s)，<br>P(s): 对s减1。如果s非0，则执行P线程s减1，否则P挂起，等待V唤醒<br>V(s): 对s加1。V可以重启P线程</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看了一遍，感觉并没有解释的很深刻，也许是自己理解的问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="CSAPP" scheme="http://wangwanchao.wang/tags/CSAPP/"/>
    
  </entry>
  
  <entry>
    <title>CSAPP概览</title>
    <link href="http://wangwanchao.wang/2019/05/29/csapp-base/"/>
    <id>http://wangwanchao.wang/2019/05/29/csapp-base/</id>
    <published>2019-05-29T12:07:05.000Z</published>
    <updated>2019-05-29T12:56:14.722Z</updated>
    
    <content type="html"><![CDATA[<p>2014年就接触CSAPP，一直拖一直拖，直到今天才决定完完整整深耕，并产生输出。无论什么原因吧，种一棵树的最好时机就是十年前，还有就是今天。</p><a id="more"></a><h2 id="7-操作系统"><a href="#7-操作系统" class="headerlink" title="7. 操作系统"></a>7. 操作系统</h2><h3 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h3><p>操作系统：处于应用程序和底层硬件之间，对应用程序提供API接口。例如Windows、Linux、MacOS等。</p><p>主要的作用：</p><blockquote><p>防止硬件被应用程序随意调用<br>提供统一的接口。因为底层硬件商不同，内部实现也不一样，操作系统对所有的硬件提供一个统一的实现标准</p></blockquote><p>标准：<br>    Unix：贝尔实验室开发的一套系统<br>    Posix标准：IEEE为了规范Unix的开发，制定了一些标准。系统调用的C语言接口、shell程序、工具、线程、网络编程<br>    标准Unix规范：”标准Unix规范”工作组和Posix一起创建的Unix系统标准</p><h3 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h3><p>文件：对I/O设备的抽象</p><h3 id="虚拟内存"><a href="#虚拟内存" class="headerlink" title="虚拟内存"></a>虚拟内存</h3><p>虚拟内存：对主存、磁盘等I/O设备的抽象，和文件的描述存在交集，很难说谁包含谁</p><p>虚拟内存分为<br>内核虚拟内存：存储操作系统的代码和数据，对所有进程不可见<br>进程虚拟内存：存放所有进程信息</p><h3 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h3><p>进程：对处理器、主存、磁盘I/O的抽象</p><p>进程是对操作系统中正在运行的程序的一种抽象。<br>计算机CPU分单核、多核，即使一个CPU，看起来好像并发执行多个进程，实际上内部是通过进程间切换实现的，即’上下文切换’</p><p>上下文：进程在运行状态下，操作系统会维护进程所有的信息(主存内容、寄存器文件的当前值)。进程各自的这些信息就是上下文。</p><p>上下文切换：每个CPU每个时刻只能有一个进程运行，把CPU的控制权交给别的进行，换取CPU的进程可以继续上次的执行，进程间运行的切换就是上下文切换</p><p>线程：一个进程可以由多个线程组成，每个线程运行在进程的上下文中，共享同样的代码和全局变量。</p><h4 id="并发、并行"><a href="#并发、并行" class="headerlink" title="并发、并行"></a>并发、并行</h4><p>并发运行：</p><p>并行运行：</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2014年就接触CSAPP，一直拖一直拖，直到今天才决定完完整整深耕，并产生输出。无论什么原因吧，种一棵树的最好时机就是十年前，还有就是今天。&lt;/p&gt;
    
    </summary>
    
    
      <category term="CSAPP" scheme="http://wangwanchao.wang/tags/CSAPP/"/>
    
  </entry>
  
  <entry>
    <title>关于今天某思面试的思考</title>
    <link href="http://wangwanchao.wang/2019/05/29/thinking-in-20190529/"/>
    <id>http://wangwanchao.wang/2019/05/29/thinking-in-20190529/</id>
    <published>2019-05-29T10:53:24.000Z</published>
    <updated>2019-05-29T17:18:12.494Z</updated>
    
    <content type="html"><![CDATA[<p>今天下午参加了某思的面试，天挺热的，某思去了两次，第一次面到总监，莫名其妙的杳无音讯。这次是第二次。<br>面试过程前HR提前说明了面试官喜欢问算法，也没怎么准备，只是为了白板，简单看了一下基础的算法。</p><a id="more"></a><p>面试中因为面试官看到我不是科班出身，就问了我两道题，一道关于系统中进程和线程，我答的不是很好，面试官说再考考你的基础，就出了一道算法题，大约五分钟后，</p><blockquote><p>面试官问我有思路吗，<br>其实这个并不难，我就把思路大致讲了一下，<br>然后面试官就要结束，习惯性的说，你还有什么要问我的吗<br>我说，我表现很差吗？<br>接着，他说不问上层应用层的东西，比较注重基础 blablabla…<br>我接着问，这道算法题是有什么模式吗？您是怎么做的？<br>其实这个，blabla…讲了一堆<br>我说，我这个用Map有问题吗？<br>你这个主要是太占空间(这时候，我其实很无奈，就是一个优化的问题，但是我也没办法)<br>然后，我说前辈有什么要指导的吗？<br>你既然是非科班出身，就应该在一年内把计算机系统、编译原理、数据结构、网络这些都学习一下(此时，我知道面试官只是对我的出身比较有看法吧，所谓的这几道题无非是不显得那么明显)</p></blockquote><p>面试出来，我知道这个行业门槛越来越高，而我们这些非科班出身的人，未来的路将越来越难走，我觉得自己在这个级别上，表现并没有那么差，但是依然会有人用自己的偏见去看待这一切。</p><p>虽然有点不甘，但是给自己加油吧！希望未来的自己越来越强大！</p><p>拆分目标，把每年的计划拆分到每个月，每一周，然后不断的复盘，总结，看看自己能不能突破当前的桎梏</p><p>6月计划：</p><p>一、读完《CSAPP》，并整理出博客</p><p>二、读完《HTTP/IP详解卷1》，并整理出博客</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天下午参加了某思的面试，天挺热的，某思去了两次，第一次面到总监，莫名其妙的杳无音讯。这次是第二次。&lt;br&gt;面试过程前HR提前说明了面试官喜欢问算法，也没怎么准备，只是为了白板，简单看了一下基础的算法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="life" scheme="http://wangwanchao.wang/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>网络中的网桥、交换机、集线器</title>
    <link href="http://wangwanchao.wang/2019/05/29/net-hub-bridge-switch/"/>
    <id>http://wangwanchao.wang/2019/05/29/net-hub-bridge-switch/</id>
    <published>2019-05-29T10:47:19.000Z</published>
    <updated>2019-05-29T10:49:22.732Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="net" scheme="http://wangwanchao.wang/tags/net/"/>
    
  </entry>
  
  <entry>
    <title>深入理解计算机系统--I/O</title>
    <link href="http://wangwanchao.wang/2019/05/29/csapp-io/"/>
    <id>http://wangwanchao.wang/2019/05/29/csapp-io/</id>
    <published>2019-05-29T10:33:03.000Z</published>
    <updated>2019-05-29T15:41:15.586Z</updated>
    
    <content type="html"><![CDATA[<p>看了CSAPP中关于I/O部分，感觉找不到重点，又浏览了一下《Linux内核设计与实现》，总感觉缺点意思，下一步希望能够结合《计算机组成与设计》分析一下</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看了CSAPP中关于I/O部分，感觉找不到重点，又浏览了一下《Linux内核设计与实现》，总感觉缺点意思，下一步希望能够结合《计算机组成与设计》分析一下&lt;/p&gt;
    
    </summary>
    
    
      <category term="CSAPP" scheme="http://wangwanchao.wang/tags/CSAPP/"/>
    
  </entry>
  
  <entry>
    <title>go-iris-websocket</title>
    <link href="http://wangwanchao.wang/2019/05/27/go-iris-websocket/"/>
    <id>http://wangwanchao.wang/2019/05/27/go-iris-websocket/</id>
    <published>2019-05-27T08:44:00.000Z</published>
    <updated>2019-05-27T08:44:00.431Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Dart和Flutter的那些事儿</title>
    <link href="http://wangwanchao.wang/2019/05/27/flutter-base/"/>
    <id>http://wangwanchao.wang/2019/05/27/flutter-base/</id>
    <published>2019-05-27T08:38:24.000Z</published>
    <updated>2019-05-27T08:44:25.303Z</updated>
    
    <content type="html"><![CDATA[<p>Flutter是一门</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Flutter是一门&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="flutter" scheme="http://wangwanchao.wang/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>对一些事情的思考</title>
    <link href="http://wangwanchao.wang/2019/05/04/thinking-in-youthday/"/>
    <id>http://wangwanchao.wang/2019/05/04/thinking-in-youthday/</id>
    <published>2019-05-04T03:56:42.000Z</published>
    <updated>2019-05-27T08:27:59.379Z</updated>
    
    <content type="html"><![CDATA[<p>从2019-04-22开始第一次面试，到现在半个月的时间。个中经历不用言语，最大的感受就是发现自己越来越菜，需要学习的东西越来越多。</p><p>从五一开始也一直在整理收藏的技术博客，面试中很多东西说不明白，终究还是没有真正明白。每次面对面试官无法回答问题，都感觉好尴尬，默默地骂自己一句：“辣鸡”。</p><a id="more"></a><p>针对面试的弱点主要以下几点：</p><p>1、缺乏深入</p><p>很多知识点，只能说个大概，底层的概念很模糊。</p><p>将来要循序渐进的对弱点进行源码分析，分析源码可以更好的成长。</p><p>2、对新技术缺乏认识。</p><p>分布式、高并发、JVM调优，这些虽然很少接触，还是要抽时间模拟实践一下。</p><p>要能实现基本的Demo，才算对新技术的简单了解</p><p>3、坚持算法</p><p>算法和实际工作关系不大，但是刷算法能保证不断的思考，加深问题的分析能力</p><p>每天坚持算法</p><p>今年的目标就是把知识点串成面，写出精品，而不是每天制造垃圾。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;从2019-04-22开始第一次面试，到现在半个月的时间。个中经历不用言语，最大的感受就是发现自己越来越菜，需要学习的东西越来越多。&lt;/p&gt;
&lt;p&gt;从五一开始也一直在整理收藏的技术博客，面试中很多东西说不明白，终究还是没有真正明白。每次面对面试官无法回答问题，都感觉好尴尬，默默地骂自己一句：“辣鸡”。&lt;/p&gt;
    
    </summary>
    
    
      <category term="life" scheme="http://wangwanchao.wang/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>zk-zab</title>
    <link href="http://wangwanchao.wang/2019/04/12/zk-zab/"/>
    <id>http://wangwanchao.wang/2019/04/12/zk-zab/</id>
    <published>2019-04-12T07:45:43.000Z</published>
    <updated>2019-05-27T08:27:59.381Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="Paxos协议"><a href="#Paxos协议" class="headerlink" title="Paxos协议"></a>Paxos协议</h2><p>Chubby技术架构</p><h2 id="ZAB协议"><a href="#ZAB协议" class="headerlink" title="ZAB协议"></a>ZAB协议</h2><p>Zookeeper Atomic Broadcast，ZooKeeper原子消息广播协议</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Paxos协议&quot;&gt;&lt;a href=&quot;#Paxos协议&quot; class=&quot;headerlink&quot; title=&quot;Paxos协议&quot;&gt;&lt;/a&gt;Paxos协议&lt;/h2&gt;&lt;p&gt;Chubby技术架构&lt;/p&gt;
&lt;h2 id=&quot;ZAB协议&quot;&gt;&lt;a
      
    
    </summary>
    
    
      <category term="ZooKeeper" scheme="http://wangwanchao.wang/tags/ZooKeeper/"/>
    
  </entry>
  
  <entry>
    <title>java特殊类Unsafe</title>
    <link href="http://wangwanchao.wang/2019/03/23/java-unsafe/"/>
    <id>http://wangwanchao.wang/2019/03/23/java-unsafe/</id>
    <published>2019-03-23T10:36:58.000Z</published>
    <updated>2019-05-27T08:27:59.366Z</updated>
    
    <content type="html"><![CDATA[<p>Unsafe类，回头整理</p><a id="more"></a><p>特性</p><ol><li><p>虚拟机“集约化”（VM intrinsification）：如用于无锁Hash表中的CAS（比较和交换）。再比如compareAndSwapInt这个方法用JNI调用，包含了对CAS有特殊引导的本地代码。在这里你能读到更多关于CAS的信息：<a href="http://en.wikipedia.org/wiki/Compare-and-swap。" target="_blank" rel="noopener">http://en.wikipedia.org/wiki/Compare-and-swap。</a></p></li><li><p>主机虚拟机（译注：主机虚拟机主要用来管理其他虚拟机。而虚拟平台我们看到只有guest VM）的sun.misc.Unsafe功能能够被用于未初始化的对象分配内存（用allocateInstance方法），然后将构造器调用解释为其他方法的调用。</p></li><li><p>你可以从本地内存地址中追踪到这些数据。使用java.lang.Unsafe类获取内存地址是可能的。而且可以通过unsafe方法直接操作这些变量！</p></li><li><p>使用allocateMemory方法，内存可以被分配到堆外。例如当allocateDirect方法被调用时DirectByteBuffer构造器内部会使用allocateMemory。</p></li><li><p>arrayBaseOffset和arrayIndexScale方法可以被用于开发arraylets，一种用来将大数组分解为小对象、限制扫描的实时消耗或者在大对象上做更新和移动。</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Unsafe类，回头整理&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://wangwanchao.wang/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>架构中的网关</title>
    <link href="http://wangwanchao.wang/2019/03/23/architecture-gateway/"/>
    <id>http://wangwanchao.wang/2019/03/23/architecture-gateway/</id>
    <published>2019-03-23T04:45:47.000Z</published>
    <updated>2019-05-27T08:27:59.355Z</updated>
    
    <content type="html"><![CDATA[<p>网关在微服务中的应用</p><p>特性：</p><p>认证、鉴权、缓存、服务编排、监控告警</p><p>权限分级、流量管控、超时熔断</p><a id="more"></a><p>场景：</p><h2 id="组件对比"><a href="#组件对比" class="headerlink" title="组件对比"></a>组件对比</h2><h3 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h3><p>原理：异步非阻塞</p><h3 id="Zuul"><a href="#Zuul" class="headerlink" title="Zuul"></a>Zuul</h3><h4 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h4><p>身份认证与安全：识别每个资源的验证要求，并拒绝那些与要求不符的请求。</p><p>审查与监控：与边缘位置追踪有意义的数据和统计结果，从而带来精确的生产视图。</p><p>动态路由：动态地将请求路由到不同的后端集群。</p><p>压力测试：逐渐增加指向集群的流量，以了解性能。</p><p>负载分配：为每一种负载类型分配对应容量，并弃用超出限定值的请求。</p><p>静态响应处理：在边缘位置直接建立部分响应，从而避免其转发到内部集群。</p><p>多区域弹性：跨越 AWS Region 进行请求路由，旨在实现 ELB（Elastic Load Balancing，弹性负载均衡）使用的多样化，以及让系统的边缘更贴近系统的使用者。</p><p>zuul1 </p><p>原理：阻塞+多线程的过滤器，线程激增</p><p>zuul2</p><p>异步非阻塞，事件+回调</p><p>高可用方案：</p><blockquote><p>zuul集群 + eureka server<br>Nginx/HAproxy/F5 + zuul</p></blockquote><h3 id="Linkerd"><a href="#Linkerd" class="headerlink" title="Linkerd"></a>Linkerd</h3><h3 id="Envoy"><a href="#Envoy" class="headerlink" title="Envoy"></a>Envoy</h3><h3 id="Undertow"><a href="#Undertow" class="headerlink" title="Undertow"></a>Undertow</h3><h3 id="Spring-Cloud-Gateway"><a href="#Spring-Cloud-Gateway" class="headerlink" title="Spring Cloud Gateway"></a>Spring Cloud Gateway</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;网关在微服务中的应用&lt;/p&gt;
&lt;p&gt;特性：&lt;/p&gt;
&lt;p&gt;认证、鉴权、缓存、服务编排、监控告警&lt;/p&gt;
&lt;p&gt;权限分级、流量管控、超时熔断&lt;/p&gt;
    
    </summary>
    
    
      <category term="Architecture" scheme="http://wangwanchao.wang/tags/Architecture/"/>
    
  </entry>
  
  <entry>
    <title>关于写作</title>
    <link href="http://wangwanchao.wang/2019/03/23/thinking-in-writing/"/>
    <id>http://wangwanchao.wang/2019/03/23/thinking-in-writing/</id>
    <published>2019-03-23T03:35:00.000Z</published>
    <updated>2019-05-27T08:27:59.379Z</updated>
    
    <content type="html"><![CDATA[<p>关于我，对于感兴趣的事情，会尽力克服拖延症，带着乐趣去做一些事情。但是往往有时候因为忙或者其他原因，一直拖延，直到欠下的债太多，才会强迫自己重新开始。</p><a id="more"></a><p>写作其实是一件很费力的事情，尤其是写技术博客，更是需要很多精力，关于写的一些东西，有时间会结合一些方法论补充一下。强化一下自己的写作意识:(待续…</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于我，对于感兴趣的事情，会尽力克服拖延症，带着乐趣去做一些事情。但是往往有时候因为忙或者其他原因，一直拖延，直到欠下的债太多，才会强迫自己重新开始。&lt;/p&gt;
    
    </summary>
    
    
      <category term="life" scheme="http://wangwanchao.wang/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>Spark基础</title>
    <link href="http://wangwanchao.wang/2019/03/16/spark-scala-loader/"/>
    <id>http://wangwanchao.wang/2019/03/16/spark-scala-loader/</id>
    <published>2019-03-16T02:58:32.000Z</published>
    <updated>2019-05-27T08:27:59.374Z</updated>
    
    <content type="html"><![CDATA[<p>依赖包provided</p><p>assembly打包</p><h2 id="RDD"><a href="#RDD" class="headerlink" title="RDD"></a>RDD</h2><p>转化操作 – 惰性求值</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;依赖包provided&lt;/p&gt;
&lt;p&gt;assembly打包&lt;/p&gt;
&lt;h2 id=&quot;RDD&quot;&gt;&lt;a href=&quot;#RDD&quot; class=&quot;headerlink&quot; title=&quot;RDD&quot;&gt;&lt;/a&gt;RDD&lt;/h2&gt;&lt;p&gt;转化操作 – 惰性求值&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="Spark" scheme="http://wangwanchao.wang/tags/Spark/"/>
    
  </entry>
  
  <entry>
    <title>搬瓦工搭建Shadowsocks服务器完整教程</title>
    <link href="http://wangwanchao.wang/2019/03/07/ss-bwh/"/>
    <id>http://wangwanchao.wang/2019/03/07/ss-bwh/</id>
    <published>2019-03-07T04:11:51.000Z</published>
    <updated>2019-03-07T05:09:13.113Z</updated>
    
    <content type="html"><![CDATA[<p>利用国外服务器搭建翻墙服务。</p><p>1、搜索搬瓦工，注册账号，购买服务器</p><p>先借用赛风搜索搬瓦工网站，由于国内对搬瓦工的封锁，无法确定一个固定的域名，比如我原来使用<a href="https://bwh8.net，后来突然就不能访问了，搜索后，发现bwh1.net可以访问" target="_blank" rel="noopener">https://bwh8.net，后来突然就不能访问了，搜索后，发现bwh1.net可以访问</a></p><p>2、安装Shadowsocks server，配置服务器信息</p><p>3、下载Shadowsocks client，配置代理信息</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;利用国外服务器搭建翻墙服务。&lt;/p&gt;
&lt;p&gt;1、搜索搬瓦工，注册账号，购买服务器&lt;/p&gt;
&lt;p&gt;先借用赛风搜索搬瓦工网站，由于国内对搬瓦工的封锁，无法确定一个固定的域名，比如我原来使用&lt;a href=&quot;https://bwh8.net，后来突然就不能访问了，搜索后，发现bw
      
    
    </summary>
    
    
      <category term="SS" scheme="http://wangwanchao.wang/tags/SS/"/>
    
  </entry>
  
  <entry>
    <title>computer</title>
    <link href="http://wangwanchao.wang/2019/02/13/computer/"/>
    <id>http://wangwanchao.wang/2019/02/13/computer/</id>
    <published>2019-02-13T02:43:16.000Z</published>
    <updated>2019-02-13T02:52:11.670Z</updated>
    
    <content type="html"><![CDATA[<h2 id="大型机"><a href="#大型机" class="headerlink" title="大型机"></a>大型机</h2><p>特点：</p><ol><li>RAS</li></ol><h2 id="小型机"><a href="#小型机" class="headerlink" title="小型机"></a>小型机</h2><p>RISC、MIPS指令</p><h2 id="x86架构服务器"><a href="#x86架构服务器" class="headerlink" title="x86架构服务器"></a>x86架构服务器</h2><p>CISC指令</p><h2 id="ARM架构服务器"><a href="#ARM架构服务器" class="headerlink" title="ARM架构服务器"></a>ARM架构服务器</h2><p>RISC指令</p><h2 id="power、sparc、安腾、xeon"><a href="#power、sparc、安腾、xeon" class="headerlink" title="power、sparc、安腾、xeon"></a>power、sparc、安腾、xeon</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;大型机&quot;&gt;&lt;a href=&quot;#大型机&quot; class=&quot;headerlink&quot; title=&quot;大型机&quot;&gt;&lt;/a&gt;大型机&lt;/h2&gt;&lt;p&gt;特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;RAS&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;小型机&quot;&gt;&lt;a href=&quot;#小型机&quot; class=
      
    
    </summary>
    
    
      <category term="Computer" scheme="http://wangwanchao.wang/tags/Computer/"/>
    
  </entry>
  
  <entry>
    <title>Servlet Web容器对比</title>
    <link href="http://wangwanchao.wang/2019/02/12/tomcat-jetty-undertow/"/>
    <id>http://wangwanchao.wang/2019/02/12/tomcat-jetty-undertow/</id>
    <published>2019-02-12T15:59:57.000Z</published>
    <updated>2019-05-27T08:27:59.380Z</updated>
    
    <content type="html"><![CDATA[<h2 id="tomcat"><a href="#tomcat" class="headerlink" title="tomcat"></a>tomcat</h2><h2 id="jetty"><a href="#jetty" class="headerlink" title="jetty"></a>jetty</h2><h2 id="undertow"><a href="#undertow" class="headerlink" title="undertow"></a>undertow</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;tomcat&quot;&gt;&lt;a href=&quot;#tomcat&quot; class=&quot;headerlink&quot; title=&quot;tomcat&quot;&gt;&lt;/a&gt;tomcat&lt;/h2&gt;&lt;h2 id=&quot;jetty&quot;&gt;&lt;a href=&quot;#jetty&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
    
  </entry>
  
</feed>
